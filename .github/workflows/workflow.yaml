name: linting-and-tests
on:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash -l {0}

jobs:
  pep8:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup poetry
        uses: ./.github/actions/poetry
      - name: Run black
        run: |
          poetry run black --version
          poetry run black --check multi_x_serverless --verbose

  pylint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup poetry
        uses: ./.github/actions/poetry
      - name: Run pylint
        run: |
          poetry run pylint --version
          poetry run pylint multi_x_serverless

  pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup poetry
        uses: ./.github/actions/poetry
      - name: Run tests
        run: |
          set -e
          poetry run pytest --cache-clear --cov=multi_x_serverless/ --cov-fail-under=90
          poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov-fail-under=90 --cov=multi_x_serverless multi_x_serverless/tests | tee pytest-coverage.txt
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

  mypy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup poetry
        uses: ./.github/actions/poetry
      - name: Run mypy
        run: |
          poetry run mypy --version
          poetry run mypy multi_x_serverless
  
  isort:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup poetry
        uses: ./.github/actions/poetry
      - name: Run isort
        run: |
          poetry run isort --version
          poetry run isort multi_x_serverless --check --diff